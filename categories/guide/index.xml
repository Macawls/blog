<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Guide on Macawls&#39; Blog</title>
        <link>https://macawls.github.io/blog/categories/guide/</link>
        <description>Recent content in Guide on Macawls&#39; Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <lastBuildDate>Tue, 10 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://macawls.github.io/blog/categories/guide/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Why a Multi-scene workflow in Unity is important</title>
        <link>https://macawls.github.io/blog/post/why-a-multi-scene-workflow-in-unity-is-important/</link>
        <pubDate>Tue, 10 Jan 2023 00:00:00 +0000</pubDate>
        
        <guid>https://macawls.github.io/blog/post/why-a-multi-scene-workflow-in-unity-is-important/</guid>
        <description>&lt;img src="https://macawls.github.io/blog/post/why-a-multi-scene-workflow-in-unity-is-important/yeah.jpg" alt="Featured image of post Why a Multi-scene workflow in Unity is important" /&gt;&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;center&gt;
&lt;p align=&#34;center&#34;&gt;
  &lt;img src=&#34;https://media.giphy.com/media/igFbuVNCTNQ1V516Ng/giphy.gif&#34; alt=&#34;&#34; width=&#34;500&#34;/&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.unity3d.com/560/Documentation/Manual/MultiSceneEditing.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Unity Docs&lt;/a&gt;
&lt;br&gt; &lt;a class=&#34;link&#34; href=&#34;http://www.unity-glue.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Unity-Glue.com&lt;/a&gt;
&lt;br&gt; &lt;a class=&#34;link&#34; href=&#34;https://youtu.be/zObWVOv1GlE&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Unity Youtube&lt;/a&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;h2 id=&#34;tldr&#34;&gt;TLDR&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s important because it allows designers and developers test and work on and different aspects of the game in isolation.&lt;/p&gt;
&lt;h2 id=&#34;what-is-a-multi-scene-workflow&#34;&gt;What is a multi-scene workflow?&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s relatively simple practice that&amp;rsquo;s often overlooked in smaller projects. It simply means there&amp;rsquo;ll be multiple scenes loaded at runtime.&lt;/p&gt;
&lt;center&gt;
&lt;p&gt;&lt;img src=&#34;https://docs.unity3d.com/560/Documentation/uploads/Main/MultiSceneEditingHierarchy.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;p&gt;A multi-scene workflow isn&amp;rsquo;t all that viable for something like prototypes since the principle of &lt;a class=&#34;link&#34; href=&#34;https://nalexn.github.io/separation-of-concerns/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;separation of concerns&lt;/a&gt; doesn&amp;rsquo;t really matter.&lt;/p&gt;
&lt;p&gt;Where it&amp;rsquo;s value becomes most apparent is when we need to maximize reusability, modularity, performance and most importantly &lt;strong&gt;collaboration&lt;/strong&gt;. Of course it&amp;rsquo;s different on a case by case basis, but I&amp;rsquo;ve found it to be a very useful practice generally.&lt;/p&gt;
&lt;h2 id=&#34;data&#34;&gt;Data&lt;/h2&gt;
&lt;p&gt;There&amp;rsquo;s many places data could live. It could be scene dependent (game objects/monobehaviours etc) or scene independent(statics/scripts/scriptable objects). At the end of the day, scenes are just data containers where the data is stored in a hierarchy.
There&amp;rsquo;s no need to duplicate data across scenes when it&amp;rsquo;s not necessary.&lt;/p&gt;
&lt;p align=&#34;center&#34;&gt;
  &lt;img src=&#34;https://i.imgur.com/lnStXSV.jpg&#34; alt=&#34;&#34; width=&#34;150&#34;/&gt;
&lt;/p&gt;
&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;
&lt;p&gt;Suppose we have a couple people in a team, all with their own roles.
Perhaps there are environment artists, programmers, designers etc.&lt;/p&gt;
&lt;p&gt;Splitting up each logical component of the game into it&amp;rsquo;s own scene allows each person to work on their own component in isolation.&lt;/p&gt;
&lt;center&gt;It really is that simple üòéü§ô&lt;/center&gt;
&lt;p&gt;Instead of say Level 1 being a single scene, we could have&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Level_1_Environment&lt;/li&gt;
&lt;li&gt;Level_1_Props&lt;/li&gt;
&lt;li&gt;Level_1_Audio&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Or whatever arbitrary names we want.
As long as it&amp;rsquo;s logical.&lt;/p&gt;
&lt;p&gt;Maybe we realize that Level_1_Environment can be split into 3 logical sections or scenes.
So, we simply load or unload whichever scene we need accordingly runtime.&lt;/p&gt;
&lt;p&gt;So now, suppose we need to test something specific in the final section of Level 1. We simply load Level_1_Environment_3, and if necessary, setup some required data or other scenes beforehand to simulate the state of the game and we&amp;rsquo;re good to go. It&amp;rsquo;s isolated and testable.&lt;/p&gt;
&lt;h2 id=&#34;source-control&#34;&gt;Source Control&lt;/h2&gt;
&lt;p&gt;To preface I&amp;rsquo;m mainly talking about &lt;a class=&#34;link&#34; href=&#34;https://git-scm.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;git&lt;/a&gt; in this case since I&amp;rsquo;m not familiar with other solutions such as &lt;a class=&#34;link&#34; href=&#34;https://unity.com/products/plastic-scm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;plastic scm&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Working with source control and monolithic scenes is a massive headache. I&amp;rsquo;ve had my fair share of merge conflicts üòåüëç.&lt;/p&gt;
&lt;p&gt;More often than not if we don&amp;rsquo;t separate scenes accordingly within a decently sized team, chaos will ensue.
Even if you&amp;rsquo;re working alone, it&amp;rsquo;s still a good idea to separate scenes logically which I recommend doing regardless.&lt;/p&gt;
&lt;p&gt;After getting used to it, it felt like I was sort of free from the shackles of coupling.&lt;/p&gt;
&lt;center&gt;
 &lt;video width=&#34;300&#34; controls&gt;
  &lt;source src=&#34;frog.mp4&#34; type=&#34;video/mp4&#34;&gt;
Your browser does not support the video tag.
&lt;/video&gt; 
&lt;/center&gt;
&lt;h2 id=&#34;how-do-we-handle-communication-across-scenes&#34;&gt;How do we handle communication across scenes?&lt;/h2&gt;
&lt;p&gt;There are 2 options as far as I believe.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Statics&lt;/li&gt;
&lt;li&gt;Scriptable objects.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Scriptable objects are great for events and storing data that&amp;rsquo;s not scene dependent.
This is a great blog post on the subject.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://unity.com/how-to/architect-game-code-scriptable-objects&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Game Architecture with Scriptable Objects&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Statics are okay, but they&amp;rsquo;re not great and I&amp;rsquo;d advocate against using them in most cases.
They&amp;rsquo;re not flexible and can be a pain to test. I&amp;rsquo;m not just regurgitating what many others have said, it really is painful.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s very difficult to simulate a specific state of the game when you have to worry about 50 invisible references scattered across the codebase and a global state.&lt;/p&gt;
&lt;center&gt;
 &lt;video width=&#34;550&#34; controls&gt;
  &lt;source src=&#34;confused.mp4&#34; type=&#34;video/mp4&#34;&gt;
Your browser does not support the video tag.
&lt;/video&gt; 
&lt;/center&gt;
&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;I&amp;rsquo;ve benefitted quite a lot from this workflow which is why I decided to write a post about it.
I could elaborate on how it helped me personally, but the resources above do more than enough to explain it.&lt;/p&gt;
&lt;p&gt;Peace ‚úåÔ∏è&lt;/p&gt;</description>
        </item>
        <item>
        <title>The XY Problem</title>
        <link>https://macawls.github.io/blog/post/the-xy-problem/</link>
        <pubDate>Fri, 28 Oct 2022 00:00:00 +0000</pubDate>
        
        <guid>https://macawls.github.io/blog/post/the-xy-problem/</guid>
        <description>&lt;img src="https://i.imgur.com/aXu6r95.png" alt="Featured image of post The XY Problem" /&gt;&lt;center&gt;
&lt;h2 id=&#34;stuff-ive-been-working-on-recently&#34;&gt;Stuff I&amp;rsquo;ve been working on recently&lt;/h2&gt;
&lt;p&gt;A star pathfinding in an isometric game.&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;video
    controls
    src=&#34;astar.mp4&#34;
    
    
    &gt;
        &lt;p&gt;
            Your browser doesn&#39;t support HTML5 video. Here is a
            &lt;a href=&#34;astar.mp4&#34;&gt;link to the video&lt;/a&gt; instead.
        &lt;/p&gt;
    &lt;/video&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;p&gt;Adding choices to a dialogue.&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;video
    controls
    src=&#34;dialogue.mp4&#34;
    
    
    &gt;
        &lt;p&gt;
            Your browser doesn&#39;t support HTML5 video. Here is a
            &lt;a href=&#34;dialogue.mp4&#34;&gt;link to the video&lt;/a&gt; instead.
        &lt;/p&gt;
    &lt;/video&gt;
&lt;/div&gt;

&lt;hr&gt;
&lt;/center&gt;
&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;The motivation behind this post stemmed from recent experiences. I started helping out some peeps alot more these days and found that certain patterns started to repeat itself.&lt;/p&gt;
&lt;h2 id=&#34;the-problem-solving-process&#34;&gt;The Problem Solving Process&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;You understand the problem&lt;/li&gt;
&lt;li&gt;Iterate over possible solutions.&lt;/li&gt;
&lt;li&gt;Decide which solution is most optimal.&lt;/li&gt;
&lt;li&gt;Execute.&lt;/li&gt;
&lt;/ol&gt;
&lt;center&gt;
&lt;p&gt;&lt;img src=&#34;https://media.giphy.com/media/dbtDDSvWErdf2/giphy.gif&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;p&gt;This first step; &lt;strong&gt;Understanding&lt;/strong&gt; is paramount. This is becuase in order to arrive at a complete solution, the problem must be completely understood. Not considering communication skills, a good understanding of the problem directly correlates to how well it can be effectively communicated.&lt;/p&gt;
&lt;p&gt;I noticed that a common pattern is to only understand a problem at a &lt;strong&gt;high level&lt;/strong&gt;.
This is problematic. Subsequently, one might derive at a solution that &lt;em&gt;supposedly&lt;/em&gt; should suffice which would be more prone to adopting inefficient or incorrect solutions.&lt;/p&gt;
&lt;p&gt;After its fully understood, it should be divided into smaller, digestable chunks if possible. Finally, each chunk should be solved by priority. This is a pretty effective way to tackle an issue in my humble opinion.&lt;/p&gt;
&lt;center&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/klhHGBA.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;h2 id=&#34;what-is-the-xy-problem&#34;&gt;What is the XY Problem?&lt;/h2&gt;
&lt;center&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://xyproblem.info/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SOURCE&lt;/a&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/dlBrxQf.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;p&gt;Quite simply, its asking about an attempted solution for a problem rather than the &lt;strong&gt;actual&lt;/strong&gt; problem. Which leads to both parties (The asker and the mentor) backtracking and misscomunicating.&lt;/p&gt;
&lt;p&gt;A really general example is someone asking, how many hours do I need to solve X? &lt;strong&gt;How many hours&lt;/strong&gt; in this case, is completely irrelvant and is a Y problem. The actual problem is how X can be solved i.e the solution, regardless of time.&lt;/p&gt;
&lt;p&gt;As a personal example, I was asked how one could &lt;strong&gt;essentially&lt;/strong&gt; have a serialized dictionary. It was asked in a convoluted way, whereby their attempted solutions were explained unnecessarily.&lt;/p&gt;
&lt;p&gt;By asking some more questions, it became apparent that the root problem was retrieving a component by name. This makes things much easier for the person that was being asked the question by providing more context.&lt;/p&gt;
&lt;p&gt;One of the worst offenders is sending over an error message and asking how the problem can be fixed. The solution is not how to get rid of the error, it is the error message itself.&lt;/p&gt;
&lt;p&gt;Maybe not the best analogy but suppose you pour milk into a bowl and realize there&amp;rsquo;s no milk left, the problem is there&amp;rsquo;s no milk left. Therefore the solution is there&amp;rsquo;s no milk left.&lt;/p&gt;
&lt;p&gt;No milk left = Ask yourself how to get more milk&lt;/p&gt;
&lt;p&gt;From this, we can try&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Buying milk from the store.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;An example Y problem in this case would be, which store has the cheapest milk? It should be obvious that asking someone which store has the cheapest milk has little or nothing to do with the solution of getting more milk.&lt;/p&gt;
&lt;p&gt;Finally, &lt;a class=&#34;link&#34; href=&#34;http://www.readthefuckingmanual.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RTFM or read the fucking manual&lt;/a&gt; is the main motto for many problems. Greatest advice of all time.&lt;/p&gt;</description>
        </item>
        <item>
        <title>My New Blog Workflow ^~^</title>
        <link>https://macawls.github.io/blog/post/my-new-blog-workflow-~/</link>
        <pubDate>Tue, 14 Jun 2022 00:00:00 +0000</pubDate>
        
        <guid>https://macawls.github.io/blog/post/my-new-blog-workflow-~/</guid>
        <description>&lt;img src="https://macawls.github.io/blog/post/my-new-blog-workflow-~/bed.jpg" alt="Featured image of post My New Blog Workflow ^~^" /&gt;&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;Alright so dis is a &lt;strong&gt;banger&lt;/strong&gt; post. I haven&amp;rsquo;t written in about 2 months because I&amp;rsquo;ve been swamped with campus work and updating the blog became tiresome with the workflow I had going.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://macawls.dev/apu-gallery/apu/beer.jpeg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;old-workflowtrash&#34;&gt;Old Workflow(TRASH)&lt;/h2&gt;
&lt;p&gt;So, this blog is made using &lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Hugo&lt;/a&gt;, which is a &lt;strong&gt;static site generator&lt;/strong&gt;(SSG) using GitHub as a remote repository. What I would do is have all of my files up on Github including the build which would be put under the &amp;ldquo;docs/&amp;rdquo; folder for hosting and Github pages. What I would have to do to &lt;strong&gt;add another&lt;/strong&gt; post is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clone the repo(with my theme submodule)&lt;/li&gt;
&lt;li&gt;Add another post under a new folder written in markdown&lt;/li&gt;
&lt;li&gt;Build the static site with something like &amp;ldquo;Hugo -d docs&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Upload/Commit to remote&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now this isn&amp;rsquo;t absolutely terrible, but its always a good idea to separate the source files from the build in some way otherwise you&amp;rsquo;ll just have a monolithic/convoluted repo. Also manually building is just terrible.&lt;/p&gt;
&lt;h4 id=&#34;another-issue-hugo-on-windows&#34;&gt;Another Issue: Hugo On Windows&lt;/h4&gt;
&lt;p&gt;Don&amp;rsquo;t its just, so bad. Windows is bad. Winblows.&lt;/p&gt;
&lt;h2 id=&#34;new-workflow&#34;&gt;New Workflow&lt;/h2&gt;
&lt;p&gt;I wish I knew how to do this sooner. Feel free to inspect the source repo and have a look at the &lt;a class=&#34;link&#34; href=&#34;https://github.com/Macawls/blog/blob/based/.github/workflows/main.yml&#34;  title=&#34;main.yml&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;main.yml&lt;/a&gt; . So using GitHub actions, on every commit to the repository, it builds and deploys on another branch within the repository to GitHub Pages. Using &lt;a class=&#34;link&#34; href=&#34;https://forestry.io/&#34;  title=&#34;Forestry&#34;
     target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Forestry&lt;/a&gt;, a headless &lt;strong&gt;Git&lt;/strong&gt;-Based &lt;strong&gt;CMS&lt;/strong&gt;(Content Management System) I can edit the content of my blog.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/DV6cRA6.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;Forestry Frontend&#34;
	
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;what-does-this-mean-tho&#34;&gt;What does this mean tho?&lt;/h4&gt;
&lt;p&gt;All I have to do is login to Forestry.IO on any PC, with or without Hugo installed and update my blog. No hassle, no issues, plain and simple.&lt;/p&gt;</description>
        </item>
        <item>
        <title>My Journey and how you can get started with using Linux</title>
        <link>https://macawls.github.io/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/</link>
        <pubDate>Sun, 12 Dec 2021 00:00:00 +0000</pubDate>
        
        <guid>https://macawls.github.io/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/</guid>
        <description>&lt;img src="https://macawls.github.io/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/screenshot.png" alt="Featured image of post My Journey and how you can get started with using Linux" /&gt;&lt;p&gt;If you watched any Linus Tech Tips videos about Linux, &lt;strong&gt;ignore&lt;/strong&gt; all of it &lt;em&gt;unless&lt;/em&gt; &lt;strong&gt;Anthony&lt;/strong&gt; or &lt;strong&gt;Luke&lt;/strong&gt; said something.
They actually know what they&amp;rsquo;re talking about.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://macawls.github.io/blog/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/linus.jpg&#34;
	width=&#34;350&#34;
	height=&#34;350&#34;
	srcset=&#34;https://macawls.github.io/blog/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/linus_hu23a104f0c4d9e7728884c8a61347aa53_29889_480x0_resize_q75_box.jpg 480w, https://macawls.github.io/blog/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/linus_hu23a104f0c4d9e7728884c8a61347aa53_29889_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Linus the &amp;lsquo;Content Creator&amp;rsquo;&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;my-journey&#34;&gt;My Journey&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://macawls.github.io/blog/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/evolution.png&#34;
	width=&#34;700&#34;
	height=&#34;394&#34;
	srcset=&#34;https://macawls.github.io/blog/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/evolution_hu1edcc1779a74f02ef37ab13e3017035c_229231_480x0_resize_box_3.png 480w, https://macawls.github.io/blog/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/evolution_hu1edcc1779a74f02ef37ab13e3017035c_229231_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Tech Literacy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;177&#34;
		data-flex-basis=&#34;426px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;During my first year of Uni, I stumbled across a random video explaining virtual machines. I thought it was the coolest thing ever. Soon after, I downloaded &lt;a class=&#34;link&#34; href=&#34;https://www.virtualbox.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;VirtualBox&lt;/a&gt; and tried random Linux distributions  (&lt;em&gt;distros&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re new to all of this, think of distros as &amp;ldquo;&lt;em&gt;flavours&lt;/em&gt;&amp;rdquo; of Linux. Linux is actually just the kernel.
I&amp;rsquo;m not really gonna get into that in this post but basically when people say Linux, they are usually referring to GNU/Linux. GNU is basically a collection of core software and utilities. If you&amp;rsquo;re interested in learning more, peep the video below.&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/ShcR4Zfc6Dw&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;I just could not believe how empowering it felt. For context, I&amp;rsquo;ve been installing and using Windows my entire life, using some shady techniques to change it, debloat it and bypass the license. Always complaining about the shitty File Explorer, Microsoft Edge, garbage Media Player, yadayada.
I was dumbfounded.&lt;/p&gt;
&lt;p&gt;I always pirated software that wasn&amp;rsquo;t free because well, I didn&amp;rsquo;t earn any money and there&amp;rsquo;s no way I could even &lt;em&gt;afford&lt;/em&gt; paying for any Microsoft or Adobe software.
In general, I don&amp;rsquo;t like being &lt;strong&gt;forced&lt;/strong&gt; to do something in a certain way.
I also want the &lt;strong&gt;freedom&lt;/strong&gt; to do whatever I want with the software I use.&lt;/p&gt;
&lt;p&gt;I was lost at first, like any normal person would be.
I was just really confused about many things.
Why was there so many different ways to do the same thing?
What the heck is a package manager?
What is the difference between a Desktop Environment and a Window Manager?
Oh my god a terminal!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://macawls.github.io/blog/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/hacker.jpg&#34;
	width=&#34;400&#34;
	height=&#34;400&#34;
	srcset=&#34;https://macawls.github.io/blog/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/hacker_huf967e5a945bbba7002dfc7f92f6139b1_72838_480x0_resize_q75_box.jpg 480w, https://macawls.github.io/blog/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/hacker_huf967e5a945bbba7002dfc7f92f6139b1_72838_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/kE-wfLuJ-ds&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;The more I used it on a daily basis, the more I grew to absolutely love the development ecosystem to bits.
Everything I normally did became that much more efficient. I had the freedom to do essentially, anything I could possibly imagine.
The best part? No limitations and no one pulling any strings. It was &lt;strong&gt;my&lt;/strong&gt; system.&lt;/p&gt;
&lt;p&gt;I started automating tasks through scripts and it was just mindblowing to me.
Of course you can write scripts in other operating systems but I personally I feel like Linux makes it much easier. Bash is one of the simplest shells, python is pre-installed on most distros.
Vim was something I didn&amp;rsquo;t even know existed.
The whole journey made me take a step back and really think about many, many aspects of software I hadn&amp;rsquo;t thought about before.
Source code, webapps, compatibility, modularity, backend, efficiency, UX, underlying frameworks and languages, all that good stuff.&lt;/p&gt;
&lt;p&gt;You don&amp;rsquo;t like the way a program does a certain thing? Sure bro, here&amp;rsquo;s the source code, do whatever you want.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://macawls.github.io/blog/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/sad.png&#34;
	width=&#34;331&#34;
	height=&#34;311&#34;
	srcset=&#34;https://macawls.github.io/blog/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/sad_hude66f1aaf1e6febfbe01299d06190142_54182_480x0_resize_box_3.png 480w, https://macawls.github.io/blog/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/sad_hude66f1aaf1e6febfbe01299d06190142_54182_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;106&#34;
		data-flex-basis=&#34;255px&#34;
	
&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Waaaaaah Windows Update again!!&amp;rdquo; üò≠&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Omg!!! I cant use this feature unless I upgrade my program!!&amp;rdquo; üò≠&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Just let me uninstall damn Edge!!&amp;rdquo; üò°üí¢&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Why do I need to login to setup my pc??&amp;rdquo; üò≠&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Wtf is this cortana shit popping up??&amp;rdquo; üò≠&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-unix-philosophy&#34;&gt;The Unix Philosophy&lt;/h2&gt;
&lt;p&gt;Basically, the Unix philosophy is to do &lt;strong&gt;one&lt;/strong&gt; thing and do it &lt;strong&gt;well.&lt;/strong&gt; Make it modular, simple and effective.
Read more about it &lt;a class=&#34;link&#34; href=&#34;https://homepage.cs.uri.edu/~thenry/resources/unix_art/ch01s06.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;&lt;strong&gt;here&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m not going to go in-depth about how important this is for developing software,  but basically it makes talking to other programs really easy and keeps things as minimal and simple as possible.
In Windows, software is packaged with all its dependencies in one huge ass program and a shitty installer.
It&amp;rsquo;s &lt;strong&gt;monolithic&lt;/strong&gt; and bloated as hell.&lt;/p&gt;
&lt;p&gt;To install something, you usually go into a browser and download some suspicious setup.exe. Odds are, you will have no idea what its actually doing under the hood and have no way of knowing unless its open source. To fend it off you have Window&amp;rsquo;s built in antivirus which isn&amp;rsquo;t even necessary in the first place if Windows was just fucking secure.&lt;/p&gt;
&lt;p&gt;I personally cannot stand it. For context I easily have around 9000 hours plus using Windows.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re unfamiliar with the idea of free software (not just cost), I highly recommend watching this &lt;a class=&#34;link&#34; href=&#34;https://youtu.be/Ag1AKIl_2GM&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ted Talk&lt;/a&gt; by a very, very &lt;strong&gt;based&lt;/strong&gt; individual.&lt;/p&gt;
&lt;h2 id=&#34;learning-resources&#34;&gt;Learning resources&lt;/h2&gt;
&lt;p&gt;If you&amp;rsquo;d like to get started, this is a pretty good first video.&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/lNsjlvwHR-0&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;Go on youtube and find a tutorial for VirtualBox and just try any distribution before you install it on bare metal.&lt;/p&gt;
&lt;h3 id=&#34;youtube-channels&#34;&gt;Youtube Channels&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/c/LukeSmithxyz&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Luke Smith&lt;/a&gt; - best one&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/c/MentalOutlaw&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mental Outlaw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/c/BugsWriter0x1337&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;BugsWriter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;websites&#34;&gt;Websites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://linuxjourney.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Linux Journey&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wiki.archlinux.org/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Arch Wiki&lt;/a&gt; - Not just for Arch&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.mankier.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mankier&lt;/a&gt; - manuals for every command&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;but-but-which-distro-should-i-start-with&#34;&gt;But&amp;hellip; but which Distro should I start with?&lt;/h3&gt;
&lt;p&gt;Don&amp;rsquo;t read bullshit articles that are like &lt;strong&gt;&amp;ldquo;TOP 10 LINUX DISTROS&amp;rdquo;&lt;/strong&gt;.
It literally doesn&amp;rsquo;t matter. Just don&amp;rsquo;t start with Gentoo first unless you&amp;rsquo;re a masochist.&lt;/p&gt;
&lt;p&gt;In &lt;em&gt;my&lt;/em&gt; opinion don&amp;rsquo;t start off with distros that are derived from other ones. For example Ubuntu is based off Debian and Manjaro is based off Arch. Just use the base because they&amp;rsquo;ll have more solid documentation.&lt;/p&gt;
&lt;p&gt;Don&amp;rsquo;t make your decision based on Xorg vs Wayland or SystemD vs another init system if you don&amp;rsquo;t know what those are in the first place.&lt;/p&gt;
&lt;p&gt;Also, don&amp;rsquo;t make your choice depending on what other people say, which contradicts everything I just said.
Choice is good. Whatever you do is up to you.&lt;/p&gt;
&lt;h3 id=&#34;but-but-how-do-i-learn&#34;&gt;But&amp;hellip; but how do I learn?&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.readthefuckingmanual.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://www.readthefuckingmanual.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In general, be &lt;strong&gt;very open&lt;/strong&gt; to learning. Don&amp;rsquo;t force doing something in a way you did it before just because you already know how to do that specific thing in a specific way.&lt;/p&gt;
&lt;p&gt;Your way of doing things was probably heavily influenced by the tailored user experience by Microsoft/Apple etc.&lt;/p&gt;
&lt;p&gt;Generally, strive for efficiency. Over time, you&amp;rsquo;ll eventually realize how much easier and simpler Linux is.&lt;/p&gt;
&lt;h3 id=&#34;compatibility&#34;&gt;Compatibility&lt;/h3&gt;
&lt;p&gt;If you have some fancy hardware that uses proprietary software then forget it.
If you want rgb puke lights from your new Razer keyboard then forget it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://macawls.github.io/blog/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/razer.jpg&#34;
	width=&#34;600&#34;
	height=&#34;451&#34;
	srcset=&#34;https://macawls.github.io/blog/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/razer_hu93707674cfe5af6cc8fbc803d30034f6_55360_480x0_resize_q75_box.jpg 480w, https://macawls.github.io/blog/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/razer_hu93707674cfe5af6cc8fbc803d30034f6_55360_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;319px&#34;
	
&gt;
For example, I use a &lt;a class=&#34;link&#34; href=&#34;https://www.logitech.com/en-us/eol/mx-master-2s-mouse.910-005131.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Logitech MX Master 2s&lt;/a&gt; as my mouse.
There&amp;rsquo;s no way im getting to use all the fancy gestures in the &lt;a class=&#34;link&#34; href=&#34;https://images-na.ssl-images-amazon.com/images/I/91c8SQfG8cS.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;software&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Gaming controllers will work.
Most printers will work.
Bluetooth works.&lt;/p&gt;
&lt;p&gt;Did you know that the Corsair iCUE software is 800 MB?
Nearly 1GB for fucking lights. That&amp;rsquo;s literally &lt;strong&gt;just&lt;/strong&gt; the installer.
These companies can just get away with nonsense because people don&amp;rsquo;t have a choice.
Why support companies like this?&lt;/p&gt;
&lt;h2 id=&#34;gaming&#34;&gt;Gaming&lt;/h2&gt;
&lt;p&gt;You can play plenty games on Linux.
If you&amp;rsquo;re a hardcore gamer, as in you wanna play all sorts of different games, Linux isn&amp;rsquo;t for you right now.
What you could do is dual-boot which is what I do but for different reasons. I have to because of University.&lt;/p&gt;
&lt;p&gt;If you start using Linux, don&amp;rsquo;t get into messing with all the settings in Wine and Lutris. Its such a waste of time and effort.&lt;/p&gt;
&lt;h2 id=&#34;ending-off&#34;&gt;Ending Off&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://macawls.github.io/blog/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/chad.jpg&#34;
	width=&#34;400&#34;
	height=&#34;340&#34;
	srcset=&#34;https://macawls.github.io/blog/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/chad_hu6193e1c2d8da1d2cd0b497dfd5731f02_55463_480x0_resize_q75_box.jpg 480w, https://macawls.github.io/blog/blog/post/my-journey-and-how-you-can-get-started-with-using-linux/chad_hu6193e1c2d8da1d2cd0b497dfd5731f02_55463_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;117&#34;
		data-flex-basis=&#34;282px&#34;
	
&gt;
TLDR: If you care about using software that respects your privacy and that you are free to change, use Linux. Here&amp;rsquo;s a meme video.&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/A33j8il0FwM&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;</description>
        </item>
        
    </channel>
</rss>
